#
# Tasks
#
tasks:
  - name: check
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
      - func: check

  - name: test
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
      - func: test
        vars:
          debug: 'hadron*,mongo*'

  - name: test-electron
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
      - func: test-electron
        vars:
          debug: 'hadron*,mongo*'

  - name: test-connectivity
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: clone
      - func: test-connectivity
        vars:
          debug: 'compass*,electron*,hadron*,mongo*'

  - name: test-csfle
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
      - func: test-csfle
        vars:
          debug: 'compass*,electron*,hadron*,mongo*'

  - name: e2e-coverage
    tags: ['run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
      - func: e2e-coverage
        vars:
          debug: 'compass-e2e-tests*,electron*,hadron*,mongo*'

  - name: generate-vulnerability-report
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
      - func: generate-vulnerability-report
        vars:
          debug: 'compass*,electron*,hadron*,mongo*'

  # Publish happens in one go to make sure we are not creating multiple github
  # releases in parallel
  - name: publish
    # Does a dry-run: doesn't actually publishes, but checks that all files
    # exist and we are not trying to do a "broken" publish
    tags: ['run-on-pr']
    depends_on:
      - name: '.required-for-publish'
        variant: '*'
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
        vars:
          scope: mongodb-compass
      - func: get-all-artifacts
      - func: publish

  - name: publish-packages-next
    tags: []
    depends_on:
      - name: '.required-for-publish'
        variant: '*'
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
      - func: publish-packages-next

  - name: publish-dev-release-info
    tags: []
    depends_on:
      - name: 'publish'
        variant: '*'
    commands:
      - func: prepare
      - func: publish-dev-release-info

  - name: test-web-sandbox-chrome
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
        vars:
          scope: 'compass-e2e-tests'
      - func: apply-compass-target-expansion
        vars:
          compass_distribution: compass
      - func: test-web-sandbox
        vars:
          mongodb_version: 'latest-alpha-enterprise'
          browser_name: 'chrome'
          compass_distribution: compass
          debug: 'compass-e2e-tests*,electron*,hadron*,mongo*'

  - name: test-web-sandbox-firefox
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
        vars:
          scope: 'compass-e2e-tests'
      - func: apply-compass-target-expansion
        vars:
          compass_distribution: compass
      - func: test-web-sandbox
        vars:
          mongodb_version: 'latest-alpha-enterprise'
          browser_name: 'firefox'
          compass_distribution: compass
          debug: 'compass-e2e-tests*,electron*,hadron*,mongo*'

<% for (const distribution of ["compass", "compass-isolated", "compass-readonly"]) { %>
  - name: package-<%= distribution %>
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
        vars:
          scope: '@mongodb-js/webpack-config-compass'
      - func: apply-compass-target-expansion
        vars:
          compass_distribution: <%= distribution %>
      - func: spawn-signing-server
      - func: package
        vars:
          debug: 'hadron*,mongo*,compass*,electron*,sign*'
          compass_distribution: <%= distribution %>
      - func: verify-artifacts
      - func: save-all-artifacts
        vars:
          compass_distribution: <%= distribution %>
<% } %>

<%
const serverVersions = [
  { name: '40x-community', version: '4.0.x' },
  { name: '40x-enterprise', version: '4.0.x-enterprise' },
  { name: '42x-community', version: '4.2.x' },
  { name: '42x-enterprise', version: '4.2.x-enterprise' },
  { name: '44x-community', version: '4.4.x' },
  { name: '44x-enterprise', version: '4.4.x-enterprise' },
  { name: '5x-community', version: '5.x.x' },
  { name: '5x-enterprise', version: '5.x.x-enterprise' },
  { name: '60x-community', version: '6.0.x' },
  { name: '60x-enterprise', version: '6.0.x-enterprise' },
  { name: '70x-community', version: '7.0.x' },
  { name: '70x-enterprise', version: '7.0.x-enterprise' },
  { name: '80x-community', version: '>= 8.0.0-rc4' },
  { name: '80x-enterprise', version: '>= 8.0.0-rc4-enterprise' },
  { name: 'latest-alpha', version: 'latest-alpha-enterprise' }
];

for (const serverVersion of serverVersions) { %>
  - name: test-packaged-app-<%= serverVersion.name %>
    tags: ['required-for-publish', 'run-on-pr']
    commands:
      - func: prepare
      - func: install
      - func: bootstrap
        vars:
          scope: 'compass-e2e-tests'
      - func: apply-compass-target-expansion
        vars:
          compass_distribution: compass
      - func: get-packaged-app
        vars:
          compass_distribution: compass
      - func: test-packaged-app
        vars:
          mongodb_version: '<%= serverVersion.version %>'
          compass_distribution: compass
          debug: 'compass-e2e-tests*,electron*,hadron*,mongo*'
<% } %>
