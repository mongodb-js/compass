{
  "languages": [
    "javascript",
    "python",
    "java",
    "csharp"
  ],
  "bsonTypes": {
    "code": {
      "javascript": "new Code('some code')",
      "python": "Code('some code')",
      "java": "new Code(\"some code\")",
      "csharp": ""
    },
    "codeWithoutNew": {
      "javascript": "Code('some code')",
      "python": "Code('some code')",
      "java": "new Code(\"some code\")",
      "csharp": ""
    },
    "codeWithScope": {
      "javascript": "Code('string', {x: 1})",
      "python": "Code('string', {'x': 1})",
      "java": "new CodeWithScope(\"string\", new Document().append(\"x\", 1))",
      "csharp": ""
    },
    "codeWithFunction": {
      "javascript": "Code(function(test) { console.log(test);  })",
      "python": "",
      "java": "new Code(\"function(test){console.log(test);}\")",
      "csharp": ""
    },
    "oid": {
      "javascript": "ObjectId()",
      "python": "ObjectId()",
      "java": "new ObjectId()",
      "csharp": ""
    },
    "oidWithNew": {
      "javascript": "new ObjectId()",
      "python": "new ObjectId()",
      "java": "new ObjectId()",
      "csharp": ""
    },
    "oidWithId": {
      "javascript": "ObjectId('5a7382114ec1f67ae445f778')",
      "python": "ObjectId('5a7382114ec1f67ae445f778')",
      "java": "new ObjectId(\"5a7382114ec1f67ae445f778\")",
      "csharp": ""
    },
    "bin": {
      "javascript": "Binary('aakjadfjadfldksjfadf', '1')",
      "python": "Binary('aakjadfjadfldksjfadf', '1')",
      "java": "new Binary(\"aakjadfjadfldksjdf\".getBytes())",
      "csharp": ""
    },
    "dbref": {
      "javascript": "DBRef('collection', 'objectID', 'dbString')",
      "python": "DBRef('collection', 'objectID', 'dbString')",
      "java": "",
      "csharp": ""
    },
    "nd": {
      "javascript": "Double(3)",
      "python": "float(3)",
      "java": "new java.lang.Double(3.00)",
      "csharp": ""
    },
    "nl": {
      "javascript": "Long(3, 3)",
      "python": "Int64(3, 3)",
      "java": "new java.lang.Long(3)",
      "csharp": ""
    },
    "ni": {
      "javascript": "new Number(2)",
      "python": "int(2)",
      "java": "new java.lang.Integer(2)",
      "csharp": ""
    },
    "integerLiteral": {
      "javascript": "2",
      "python": "2",
      "java": "2",
      "csharp": ""
    },
    "dec128": {
      "javascript": "new Decimal128.fromString('5.00000001')",
      "python": "Decimal128('5.00000001')",
      "java": "new Decimal128(5.00000001)",
      "csharp": ""
    },
    "minkey": {
      "javascript": "MinKey()",
      "python": "MinKey()",
      "java": "new MinKey()",
      "csharp": ""
    },
    "maxkey": {
      "javascript": "MaxKey()",
      "python": "MaxKey()",
      "java": "new MaxKey()",
      "csharp": ""
    },
    "isodate": {
      "javascript": "new Date('1995-12-17T03:24:00')",
      "python": "datetime.date(1995, 11, 17)",
      "java": "new java.util.Date(1995, 11, 17)",
      "csharp": ""
    },
    "regexp": {
      "javascript": "new RegExp('/^[a-z0-9_-]{3,16}$/')",
      "python": "RegExp('/^[a-z0-9_-]{3,16}$/')",
      "java": "Pattern.compile(\"/^[a-z0-9_-]{3,16}$/\")",
      "csharp": ""
    },
    "bsonRegexp": {
      "javascript": "new BSONRegExp('/^[a-z0-9_-]{3,16}$/')",
      "python": "RegExp('/^[a-z0-9_-]{3,16}$/')",
      "java": "Pattern.compile(\"/^[a-z0-9_-]{3,16}$/\")",
      "csharp": ""
    },
    "ts": {
      "javascript": "Timestamp(10, 100)",
      "python": "Timestamp(10, 100)",
      "java": "new BSONTimestamp(10, 100)",
      "csharp": ""
    },
    "subdoc": {
      "javascript": "{x: 1}",
      "python": "{'x': 1}",
      "java": "new Document(\"x\", 1)",
      "csharp": ""
    },
    "subdocNestedArray": {
      "javascript": "{x: [1, 2]}",
      "python": "{'x': [1, 2]}",
      "java": "new Document(\"x\", Arrays.asList(1, 2))",
      "csharp": ""
    },
    "subdocNestedDocument": {
      "javascript": "{x: {y: 2}}",
      "python": "{'x': {'y': 2}}",
      "java": "new Document(\"x\", new Document(\"y\", 2))",
      "csharp": ""
    },
    "subarray": {
      "javascript": "[1, 2]",
      "python": "[1, 2]",
      "java": "Arrays.asList(1, 2)",
      "csharp": ""
    },
    "subarrayNestedDocument": {
      "javascript": "[1, { settings: 'http2' }]",
      "python": "[1, { 'settings': 'http2' }]",
      "java": "Arrays.asList(1, new Document(\"settings\", \"http2\"))",
      "csharp": ""
    },
    "subarrayNestedArray": {
      "javascript": "[1, [2, 3]]",
      "python": "[1, [2, 3]]",
      "java": "Arrays.asList(1, Array.asList(2, 3)",
      "csharp": ""
    }
  }
}
