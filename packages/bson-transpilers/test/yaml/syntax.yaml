runner: !<tag:yaml.org,2002:js/function> |-
  function anonymous(it,type,expect,input,output,transpiler,test
  ) {

      it(`${input}: ${test.input[input]} => ${output}`, () => {
          expect(
              transpiler[input][output].compile(test.input[input], true)
          ).to.equal(test.output[output]);
      });

  }
tests:
  whitespace:
    - input:
        shell: "1 \t\t +2"
      output:
        javascript: 1 + 2
        python: 1 + 2
        java: 1L + 2L
        csharp: 1 + 2
        php: 1 + 2
        ruby: 1 + 2
        go: 1 + 2
        rust: 1 + 2
    - input:
        shell: "1 \t\t +2"
      output:
        javascript: 1 + 2
        python: 1 + 2
        java: 1L + 2L
        csharp: 1 + 2
        php: 1 + 2
        ruby: 1 + 2
        go: 1 + 2
        rust: 1 + 2
  compare:
    - input:
        shell: 1 === 2
      output:
        javascript: 1 === 2
        python: 1 == 2
        java: 1L == 2L
        csharp: 1 == 2
        php: 1 == 2
        ruby: 1 == 2
        go: 1 == 2
        rust: 1 == 2
    - input:
        shell: 1 !== 2
      output:
        javascript: 1 !== 2
        python: 1 != 2
        java: 1L != 2L
        csharp: 1 != 2
        php: 1 != 2
        ruby: 1 != 2
        go: 1 != 2
        rust: 1 != 2
    - input:
        shell: true || false
      output:
        javascript: true || false
        python: True or False
        java: true || false
        csharp: true || false
        php: true || false
        ruby: true || false
        go: true || false
        rust: true || false
    - input:
        shell: true || false || true
      output:
        javascript: true || false || true
        python: True or False or True
        java: true || false || true
        csharp: true || false || true
        php: true || false || true
        ruby: true || false || true
        go: true || false || true
        rust: true || false || true
    - input:
        shell: true && false
      output:
        javascript: true && false
        python: True and False
        java: true && false
        csharp: true && false
        php: true && false
        ruby: true && false
        go: true && false
        rust: true && false
    - input:
        shell: true && false && true
      output:
        javascript: true && false && true
        python: True and False and True
        java: true && false && true
        csharp: true && false && true
        php: true && false && true
        ruby: true && false && true
        go: true && false && true
        rust: true && false && true
    - input:
        shell: '!true'
      output:
        javascript: '!true'
        python: not True
        java: '!true'
        csharp: '!true'
        php: '! true'
        ruby: '!true'
        go: '!true'
        rust: '!true'
    - input:
        shell: 1 > 2 < 3 >= 4 <= 6
      output:
        javascript: 1 > 2 < 3 >= 4 <= 6
        python: 1 > 2 < 3 >= 4 <= 6
        java: 1L > 2L < 3L >= 4L <= 6L
        csharp: 1 > 2 < 3 >= 4 <= 6
        go: 1 > 2 < 3 >= 4 <= 6
  comments:
    - input:
        shell: 1 // a comment
      output:
        javascript: '1'
        python: '1'
        java: 1L
        csharp: '1'
        php: '1'
        ruby: '1'
        go: '1'
        rust: '1'
    - input:
        shell: 1 /* a comment*/
      output:
        javascript: '1'
        python: '1'
        java: 1L
        csharp: '1'
        php: '1'
        ruby: '1'
        go: '1'
        rust: '1'
    - input:
        shell: |-
          1 /* a 
          com
          men
          t*/+2
      output:
        javascript: 1 + 2
        python: 1 + 2
        java: 1L + 2L
        csharp: 1 + 2
        php: 1 + 2
        ruby: 1 + 2
        go: 1 + 2
        rust: 1 + 2
    - input:
        shell: |-
          1 /* a 
          com
          men
          t*/
      output:
        javascript: '1'
        python: '1'
        java: 1L
        csharp: '1'
        php: '1'
        ruby: '1'
        go: '1'
        rust: '1'
    - input:
        shell: 1 /* a comment*/+2
      output:
        javascript: 1 + 2
        python: 1 + 2
        java: 1L + 2L
        csharp: 1 + 2
        php: 1 + 2
        ruby: 1 + 2
        go: 1 + 2
        rust: 1 + 2
  parens:
    - input:
        shell: (1 === 1)
      output:
        javascript: (1 === 1)
        python: (1 == 1)
        java: (1L == 1L)
        csharp: (1 == 1)
        php: (1 == 1)
        ruby: (1 == 1)
        go: (1 == 1)
        rust: (1 == 1)
    - input:
        shell: ((1 === (1)))
      output:
        javascript: ((1 === (1)))
        python: ((1 == (1)))
        java: ((1L == (1L)))
        csharp: ((1 == (1)))
        php: ((1 == (1)))
        ruby: ((1 == (1)))
        go: ((1 == (1)))
        rust: ((1 == (1)))
