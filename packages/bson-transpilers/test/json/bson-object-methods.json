{
  "tests": {
    "Code": [
      {
        "description": "CodeWithScope toJSON",
        "query": "Code('test code', {x: 1}).toJSON()",
        "python": "",
        "java": "new Document().append(\"code\", \"test code\").append(\"scope\", new Document().append(\"x\", 1))",
        "csharp": ""
      },
      {
        "description": "Code toJSON",
        "query": "Code('test code').toJSON()",
        "python": "",
        "java": "new Document().append(\"code\", \"test code\").append(\"scope\", undefined)",
        "csharp": ""
      }
    ],
    "ObjectId": [
      {
        "description": "no arguments toJSON",
        "query": "ObjectId().toJSON()",
        "python": "",
        "java": "new ObjectId().toHexString()",
        "csharp": ""
      },
      {
        "description": "hex arg toJSON",
        "query": "ObjectId('5ab901c29ee65f5c8550c5b9').toJSON()",
        "python": "",
        "java": "new ObjectId(\"5ab901c29ee65f5c8550c5b9\").toHexString()",
        "csharp": ""
      },
      {
        "description": "no arg toString",
        "query": "ObjectId().toString()",
        "python": "",
        "java": "new ObjectId().toString()",
        "csharp": ""
      },
      {
        "description": "hex arg toString",
        "query": "ObjectId('5ab901c29ee65f5c8550c5b9').toString()",
        "python": "",
        "java": "new ObjectId(\"5ab901c29ee65f5c8550c5b9\").toString()",
        "csharp": ""
      },
      {
        "description": "getTimestamp",
        "query": "ObjectId('5ab901c29ee65f5c8550c5b9').getTimestamp()",
        "python": "",
        "java": "new ObjectId(\"5ab901c29ee65f5c8550c5b9\").getTimestamp()",
        "csharp": ""
      },
      {
        "description": "equals",
        "query": "ObjectId().equals(ObjectId())",
        "python": "",
        "java": "new ObjectId().equals(new ObjectId())",
        "csharp": ""
      }
    ],
    "Binary": [
      {
        "description": "length",
        "query": "Binary(Buffer.from('a string')).length()",
        "python": "",
        "java": "new Binary(\"a string\".getBytes(\"UTF-8\")).length()",
        "csharp": ""
      },
      {
        "description": "value",
        "query": "Binary(Buffer.from('a string')).value()",
        "python": "",
        "java": "new Binary(\"a string\".getBytes(\"UTF-8\")).getData()",
        "csharp": ""
      },
      {
        "description": "toString",
        "query": "Binary(Buffer.from('a string')).toString()",
        "python": "",
        "java": "new Binary(\"a string\".getBytes(\"UTF-8\")).toString()",
        "csharp": ""
      },
      {
        "description": "toJSON",
        "query": "Binary(Buffer.from('a string')).toJSON()",
        "python": "",
        "java": "new Binary(\"a string\".getBytes(\"UTF-8\")).toString()",
        "csharp": ""
      }
    ],
    "DBRef": [
      {
        "description": "toJSON with two args",
        "query": "new DBRef('coll', new ObjectId()).toJSON()",
        "python": "",
        "java": "new Document().append(\"$ref\", \"coll\").append(\"$id\", new ObjectId()).append(\"$db\", \"\")",
        "csharp": ""
      },
      {
        "description": "toJSON with three args",
        "query": "new DBRef('coll', new ObjectId(), 'db').toJSON()",
        "python": "",
        "java": "new Document().append(\"$ref\", \"coll\").append(\"$id\", new ObjectId()).append(\"$db\", \"db\")",
        "csharp": ""
      }
    ],
    "Int32": [
      {
        "description": "toJSON",
        "query": "Int32(3).toJSON()",
        "python": "",
        "java": "new java.lang.Integer(3).intValue()",
        "csharp": ""
      },
      {
        "description": "valueOf",
        "query": "Int32(3).valueOf()",
        "python": "",
        "java": "new java.lang.Integer(3).intValue()",
        "csharp": ""
      }
    ],
    "Double": [
      {
        "description": "toJSON",
        "query": "Double(3).toJSON()",
        "python": "",
        "java": "new java.lang.Double(3).doubleValue()",
        "csharp": ""
      },
      {
        "description": "valueOf",
        "query": "Double(3).valueOf()",
        "python": "",
        "java": "new java.lang.Double(3).doubleValue()",
        "csharp": ""
      }
    ],
    "Long": [
      {
        "description": "",
        "query": "",
        "python": "",
        "java": "",
        "csharp": ""
      }
    ],
    "Decimal128": [
      {
        "description": "toString",
        "query": "new Decimal128(Buffer.from('5')).toString()",
        "python": "",
        "java": "Decimal128.parse(\"5.3E-6175\").toString()",
        "csharp": ""
      },
      {
        "description": "toJSON",
        "query": "new Decimal128(Buffer.from('5')).toJSON()",
        "python": "",
        "java": "new Document().append(\"$numberDecimal\", Decimal128.parse(\"5.3E-6175\").toString())",
        "csharp": ""
      }
    ],
    "Timestamp": [
      {
        "description": "",
        "query": "",
        "python": "",
        "java": "",
        "csharp": ""
      }
    ],
    "Symbol": [
      {
        "description": "valueOf",
        "query": "Symbol('2').valueOf()",
        "python": "",
        "java": "new Symbol(\"2\").getSymbol()",
        "csharp": ""
      },
      {
        "description": "toString",
        "query": "Symbol('2').toString()",
        "python": "",
        "java": "new Symbol(\"2\").toString()",
        "csharp": ""
      },
      {
        "description": "inspect",
        "query": "Symbol('2').inspect()",
        "python": "",
        "java": "new Symbol(\"2\").getSymbol()",
        "csharp": ""
      },
      {
        "description": "toJSON",
        "query": "Symbol('2').toJSON()",
        "python": "",
        "java": "new Symbol(\"2\").toString()",
        "csharp": ""
      }
    ]
  }
}
