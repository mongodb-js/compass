{
  "tests": {
    "ObjectId": [
      {
        "description": "no arg toString",
        "javascript": "ObjectId().toString()",
        "python": "str(ObjectId())",
        "java": "new ObjectId().toString()",
        "csharp": ""
      },
      {
        "description": "hex arg toString",
        "javascript": "ObjectId('5ab901c29ee65f5c8550c5b9').toString()",
        "python": "str(ObjectId('5ab901c29ee65f5c8550c5b9'))",
        "java": "new ObjectId(\"5ab901c29ee65f5c8550c5b9\").toString()",
        "csharp": ""
      },
      {
        "description": "getTimestamp",
        "javascript": "ObjectId('5ab901c29ee65f5c8550c5b9').getTimestamp()",
        "python": "ObjectId('5ab901c29ee65f5c8550c5b9').generation_time",
        "java": "new ObjectId(\"5ab901c29ee65f5c8550c5b9\").getTimestamp()",
        "csharp": ""
      },
      {
        "description": "equals",
        "javascript": "ObjectId().equals(ObjectId())",
        "python": "ObjectId() == ObjectId()",
        "java": "new ObjectId().equals(new ObjectId())",
        "csharp": ""
      }
    ],
    "Binary": [
      {
        "description": "length",
        "javascript": "Binary(Buffer.from('a string')).length()",
        "python": "len(bytearray(Binary(b'a string')))",
        "java": "new Binary(\"a string\".getBytes(\"UTF-8\")).length()",
        "csharp": ""
      },
      {
        "description": "value",
        "javascript": "Binary(Buffer.from('a string')).value()",
        "python": "str(Binary(b'a string'))",
        "java": "new Binary(\"a string\".getBytes(\"UTF-8\")).getData()",
        "csharp": ""
      },
      {
        "description": "toString",
        "javascript": "Binary(Buffer.from('a string')).toString()",
        "python": "str(Binary(b'a string'))",
        "java": "new Binary(\"a string\".getBytes(\"UTF-8\")).toString()",
        "csharp": ""
      }
    ],
    "Int32": [
      {
        "description": "valueOf",
        "javascript": "Int32(3).valueOf()",
        "python": "int(3)",
        "java": "new java.lang.Integer(3).intValue()",
        "csharp": ""
      }
    ],
    "Double": [
      {
        "description": "valueOf",
        "javascript": "Double(3).valueOf()",
        "python": "float(3)",
        "java": "new java.lang.Double(3).doubleValue()",
        "csharp": ""
      }
    ],
    "Long": [
      {
        "description": "toInt",
        "javascript": "Long(1, 100).toInt()",
        "python": "int(Int64(429496729601))",
        "java": "new java.lang.Long(\"429496729601\").intValue()",
        "csharp": ""
      },
      {
        "description": "toNumber",
        "javascript": "Long(1, 100).toNumber()",
        "python": "float(Int64(429496729601))",
        "java": "new java.lang.Long(\"429496729601\").floatValue()",
        "csharp": ""
      },
      {
        "description": "toString without radix",
        "javascript": "Long(1, 100).toString()",
        "python": "str(Int64(429496729601))",
        "java": "\"429496729601\"",
        "csharp": ""
      },
      {
        "description": "toString with radix",
        "javascript": "Long(1, 100).toString(10)",
        "python": "str(Int64(429496729601))",
        "java": "\"429496729601\"",
        "csharp": ""
      },
      {
        "description": "isZero",
        "javascript": "Long(1, 100).isZero()",
        "python": "Int64(429496729601) == 0",
        "java": "new java.lang.Long(\"429496729601\").equals(new java.lang.Long(0))",
        "csharp": ""
      },
      {
        "description": "isNegative",
        "javascript": "Long(1, 100).isNegative()",
        "python": "Int64(429496729601) < 0",
        "java": "new java.lang.Long(\"429496729601\").compareTo(new java.lang.Long(0)) < 0",
        "csharp": ""
      },
      {
        "description": "isOdd",
        "javascript": "Long(1, 100).isOdd()",
        "python": "(Int64(429496729601) % 2) == 0",
        "java": "new java.lang.Long(\"429496729601\") % 2 == 0",
        "csharp": ""
      },
      {
        "description": "equals",
        "javascript": "Long(1, 100).equals(Long(9, 1))",
        "python": "(Int64(429496729601) - Int64(4294967305)) == 0",
        "java": "new java.lang.Long(\"429496729601\").equals(new java.lang.Long(\"4294967305\"))",
        "csharp": ""
      },
      {
        "description": "notEquals",
        "javascript": "Long(1, 100).notEquals(Long(9, 1))",
        "python": "(Int64(429496729601) - Int64(4294967305)) != 0",
        "java": "new java.lang.Long(\"429496729601\").compareTo(new java.lang.Long(\"4294967305\")) != 0",
        "csharp": ""
      },
      {
        "description": "compare",
        "javascript": "Long(1, 100).compare(Long(9, 1))",
        "python": "Int64(429496729601) - Int64(4294967305)",
        "java": "new java.lang.Long(\"429496729601\").compareTo(new java.lang.Long(\"4294967305\"))",
        "csharp": ""
      },
      {
        "description": "greaterThan",
        "javascript": "Long(1, 100).greaterThan(Long(9, 1))",
        "python": "(Int64(429496729601) - Int64(4294967305)) > 0",
        "java": "new java.lang.Long(\"429496729601\").compareTo(new java.lang.Long(\"4294967305\")) > 0",
        "csharp": ""
      },
      {
        "description": "greaterThanOrEqual",
        "javascript": "Long(1, 100).greaterThanOrEqual(Long(9, 1))",
        "python": "(Int64(429496729601) - Int64(4294967305)) >= 0",
        "java": "new java.lang.Long(\"429496729601\").compareTo(new java.lang.Long(\"4294967305\")) >= 0",
        "csharp": ""
      },
      {
        "description": "lessThan",
        "javascript": "Long(1, 100).lessThan(Long(9, 1))",
        "python": "(Int64(429496729601) - Int64(4294967305)) < 0",
        "java": "new java.lang.Long(\"429496729601\").compareTo(new java.lang.Long(\"4294967305\")) < 0",
        "csharp": ""
      },
      {
        "description": "lessThanOrEqual",
        "javascript": "Long(1, 100).lessThanOrEqual(Long(9, 1))",
        "python": "(Int64(429496729601) - Int64(4294967305)) <= 0",
        "java": "new java.lang.Long(\"429496729601\").compareTo(new java.lang.Long(\"4294967305\")) <= 0",
        "csharp": ""
      },
      {
        "description": "negate",
        "javascript": "Long(1, 100).negate())",
        "python": "-Int64(429496729601)",
        "java": "-new java.lang.Long(\"429496729601\")",
        "csharp": ""
      },
      {
        "description": "add",
        "javascript": "Long(1, 100).add(Long(9, 1))",
        "python": "Int64(429496729601) + Int64(4294967305)",
        "java": "new java.lang.Long(\"429496729601\") + new java.lang.Long(\"4294967305\")",
        "csharp": ""
      },
      {
        "description": "subtract",
        "javascript": "Long(1, 100).subtract(Long(9, 1))",
        "python": "Int64(429496729601) - Int64(4294967305)",
        "java": "new java.lang.Long(\"429496729601\") - new java.lang.Long(\"4294967305\")",
        "csharp": ""
      },
      {
        "description": "multiply",
        "javascript": "Long(1, 100).multiply(Long(9, 1))",
        "python": "Int64(429496729601) * Int64(4294967305)",
        "java": "new java.lang.Long(\"429496729601\") * new java.lang.Long(\"4294967305\")",
        "csharp": ""
      },
      {
        "description": "div",
        "javascript": "Long(1, 100).div(Long(9, 1))",
        "python": "Int64(429496729601) / Int64(4294967305)",
        "java": "new java.lang.Long(\"429496729601\") / new java.lang.Long(\"4294967305\")",
        "csharp": ""
      },
      {
        "description": "modulo",
        "javascript": "Long(1, 100).modulo(Long(9, 1))",
        "python": "Int64(429496729601) % Int64(4294967305)",
        "java": "new java.lang.Long(\"429496729601\") % new java.lang.Long(\"4294967305\")",
        "csharp": ""
      },
      {
        "description": "not",
        "javascript": "Long(1, 100).not()",
        "python": "~Int64(429496729601)",
        "java": "~new java.lang.Long(\"429496729601\")",
        "csharp": ""
      },
      {
        "description": "and",
        "javascript": "Long(1, 100).and(Long(9, 1))",
        "python": "Int64(429496729601) & Int64(4294967305)",
        "java": "new java.lang.Long(\"429496729601\") & new java.lang.Long(\"4294967305\")",
        "csharp": ""
      },
      {
        "description": "or",
        "javascript": "Long(1, 100).or(Long(9, 1))",
        "python": "Int64(429496729601) | Int64(4294967305)",
        "java": "new java.lang.Long(\"429496729601\") | new java.lang.Long(\"4294967305\")",
        "csharp": ""
      },
      {
        "description": "xor",
        "javascript": "Long(1, 100).xor(Long(9, 1))",
        "python": "Int64(429496729601) ^ Int64(4294967305)",
        "java": "new java.lang.Long(\"429496729601\") ^ new java.lang.Long(\"4294967305\")",
        "csharp": ""
      },
      {
        "description": "shiftLeft",
        "javascript": "Long(1, 100).shiftLeft(10)",
        "python": "Int64(429496729601) << 10",
        "java": "java.lang.Long.rotateLeft(new java.lang.Long(\"429496729601\"), 10)",
        "csharp": ""
      },
      {
        "description": "shiftRight",
        "javascript": "Long(1, 100).shiftRight(10)",
        "python": "Int64(429496729601) >> 10",
        "java": "java.lang.Long.rotateRight(new java.lang.Long(\"429496729601\"), 10)",
        "csharp": ""
      }
    ],
    "Decimal128": [
      {
        "description": "toString",
        "javascript": "new Decimal128(Buffer.from('5')).toString()",
        "python": "str(Decimal128('5.3E-6175'))",
        "java": "Decimal128.parse(\"5.3E-6175\").toString()",
        "csharp": ""
      }
    ],
    "Timestamp": [
      {
        "description": "toString",
        "javascript": "Timestamp(1, 100).toString()",
        "python": "str(Timestamp(1, 100))",
        "java": "new BSONTimestamp(1, 100).toString()",
        "csharp": ""
      },
      {
        "description": "equals",
        "javascript": "Timestamp(1, 100).equals(Timestamp(2, 99))",
        "python": "(Timestamp(1, 100).time - Timestamp(2, 99).time) == 0",
        "java": "new BSONTimestamp(1, 100).equals(new BSONTimestamp(2, 99))",
        "csharp": ""
      },
      {
        "description": "compare",
        "javascript": "Timestamp(1, 100).compare(Timestamp(2, 99))",
        "python": "Timestamp(1, 100).time - Timestamp(2, 99).time",
        "java": "new BSONTimestamp(1, 100).compareTo(new BSONTimestamp(2, 99))",
        "csharp": ""
      },
      {
        "description": "notEquals",
        "javascript": "Timestamp(1, 100).notEquals(Timestamp(2, 99))",
        "python": "(Timestamp(1, 100).time - Timestamp(2, 99).time) != 0",
        "java": "new BSONTimestamp(1, 100).compareTo(new BSONTimestamp(2, 99)) != 0",
        "csharp": ""
      },
      {
        "description": "greaterThan",
        "javascript": "Timestamp(1, 100).greaterThan(Timestamp(2, 99))",
        "python": "(Timestamp(1, 100).time - Timestamp(2, 99).time) > 0",
        "java": "new BSONTimestamp(1, 100).compareTo(new BSONTimestamp(2, 99)) > 0",
        "csharp": ""
      },
      {
        "description": "greaterThanOrEqual",
        "javascript": "Timestamp(1, 100).greaterThanOrEqual(Timestamp(2, 99))",
        "python": "(Timestamp(1, 100).time - Timestamp(2, 99).time) >= 0",
        "java": "new BSONTimestamp(1, 100).compareTo(new BSONTimestamp(2, 99)) >= 0",
        "csharp": ""
      },
      {
        "description": "lessThan",
        "javascript": "Timestamp(1, 100).lessThan(Timestamp(2, 99))",
        "python": "(Timestamp(1, 100).time - Timestamp(2, 99).time) < 0",
        "java": "new BSONTimestamp(1, 100).compareTo(new BSONTimestamp(2, 99)) < 0",
        "csharp": ""
      },
      {
        "description": "lessThanOrEqual",
        "javascript": "Timestamp(1, 100).lessThanOrEqual(Timestamp(2, 99))",
        "python": "(Timestamp(1, 100).time - Timestamp(2, 99).time) <= 0",
        "java": "new BSONTimestamp(1, 100).compareTo(new BSONTimestamp(2, 99)) <= 0",
        "csharp": ""
      },
      {
        "description": "getLowBits",
        "javascript": "Timestamp(1, 100).getLowBits()",
        "python": "Timestamp(1, 100).time",
        "java": "new BSONTimestamp(1, 100).getTime()",
        "csharp": ""
      },
      {
        "description": "getHighBits",
        "javascript": "Timestamp(1, 100).getHighBits()",
        "python": "Timestamp(1, 100).inc",
        "java": "new BSONTimestamp(1, 100).getInc()",
        "csharp": ""
      }
    ],
    "Symbol": [
      {
        "description": "valueOf",
        "javascript": "Symbol('2').valueOf()",
        "python": "unicode('2', 'utf-8')",
        "java": "new Symbol(\"2\").getSymbol()",
        "csharp": ""
      },
      {
        "description": "toString",
        "javascript": "Symbol('2').toString()",
        "python": "str(unicode('2', 'utf-8'))",
        "java": "new Symbol(\"2\").toString()",
        "csharp": ""
      },
      {
        "description": "inspect",
        "javascript": "Symbol('2').inspect()",
        "python": "unicode('2', 'utf-8')",
        "java": "new Symbol(\"2\").getSymbol()",
        "csharp": ""
      }
    ]
  }
}
