{
  "tests": {
    "Code": [
      {
        "description": "CodeWithScope scope",
        "javascript": "Code('test code', {x: 1}).scope",
        "python": "Code('test code', {'x': 1}).scope",
        "java": "new CodeWithScope(\"test code\", new Document().append(\"x\", new java.lang.Long(\"1\"))).getScope()",
        "csharp": "",
        "shell": "Code('test code', {x: 1}).scope"
      },
      {
        "description": "Code code",
        "javascript": "Code('test code').code",
        "python": "str(Code('test code'))",
        "java": "new Code(\"test code\").getCode()",
        "csharp": "",
        "shell": "Code('test code').code"
      },
      {
        "description": "Code toString",
        "javascript": "Code('test code').toString()",
        "python": "repr(Code('test code'))",
        "java": "new Code(\"test code\").toString()",
        "csharp": "",
        "shell": "Code('test code').toString()"
      }
    ],
    "ObjectId": [
      {
        "description": "toString",
        "javascript": "ObjectId().toString()",
        "python": "str(ObjectId())",
        "java": "new ObjectId().toHexString()",
        "csharp": "",
        "shell": "ObjectId().toString()"
      },
      {
        "description": "getTimestamp",
        "javascript": "ObjectId('5ab901c29ee65f5c8550c5b9').getTimestamp()",
        "python": "ObjectId('5ab901c29ee65f5c8550c5b9').generation_time",
        "java": "new ObjectId(\"5ab901c29ee65f5c8550c5b9\").getTimestamp()",
        "csharp": "",
        "shell": "ObjectId('5ab901c29ee65f5c8550c5b9').getTimestamp()"
      },
      {
        "description": "equals",
        "javascript": "ObjectId().equals(ObjectId())",
        "python": "ObjectId() == ObjectId()",
        "java": "new ObjectId().equals(new ObjectId())",
        "csharp": "",
        "shell": "ObjectId().equals(ObjectId())"
      }
    ],
    "BinData": [
      {
        "description": "length",
        "javascript": "Binary('0001', '1').length()",
        "python": "len(bytearray(Binary(b'0001', bson.binary.FUNCTION_SUBTYPE)))",
        "java": "new Binary(BsonBinarySubType.FUNCTION, \"0001\".getBytes(\"UTF-8\")).length()",
        "csharp": "",
        "shell": "BinData(1, '0001').length()"
      },
      {
        "description": "subtype",
        "javascript": "Binary('0001', '1').sub_type",
        "python": "Binary(b'0001', bson.binary.FUNCTION_SUBTYPE).subtype()",
        "java": "new Binary(BsonBinarySubType.FUNCTION, \"0001\".getBytes(\"UTF-8\")).getType()",
        "csharp": "",
        "shell": "BinData(1, '0001').subtype()"
      },
      {
        "description": "toString",
        "javascript": "new Binary('0001', '1').toString()",
        "python": "str(Binary(b'0001', bson.binary.FUNCTION_SUBTYPE))",
        "java": "new Binary(BsonBinarySubType.FUNCTION, \"0001\".getBytes(\"UTF-8\")).toString()",
        "csharp": "",
        "shell": "new BinData(1, '0001').toString()"
      }
    ],
    "DBRef": [
      {
        "description": "toString",
        "javascript": "new DBRef('coll', new ObjectId()).toString()",
        "python": "str(DBRef('coll', ObjectId()))",
        "java": "new DBRef(\"coll\", new ObjectId()).toString()",
        "csharp": "",
        "shell": "new DBRef('coll', new ObjectId()).toString()"
      },
      {
        "description": "getDb",
        "javascript": "new DBRef('coll', new ObjectId()).db",
        "python": "DBRef('coll', ObjectId()).database",
        "java": "new DBRef(\"coll\", new ObjectId()).getDatabaseName()",
        "csharp": "",
        "shell": "new DBRef('coll', new ObjectId()).getDb()"
      },
      {
        "description": "$db",
        "javascript": "new DBRef('coll', new ObjectId()).db",
        "python": "DBRef('coll', ObjectId()).database",
        "java": "new DBRef(\"coll\", new ObjectId()).getDatabaseName()",
        "csharp": "",
        "shell": "new DBRef('coll', new ObjectId()).$db"
      },
      {
        "description": "getCollection",
        "javascript": "new DBRef('coll', new ObjectId()).namespace",
        "python": "DBRef('coll', ObjectId()).collection",
        "java": "new DBRef(\"coll\", new ObjectId()).getCollectionName()",
        "csharp": "",
        "shell": "new DBRef('coll', new ObjectId()).getCollection()"
      },
      {
        "description": "getRef",
        "javascript": "new DBRef('coll', new ObjectId()).namespace",
        "python": "DBRef('coll', ObjectId()).collection",
        "java": "new DBRef(\"coll\", new ObjectId()).getCollectionName()",
        "csharp": "",
        "shell": "new DBRef('coll', new ObjectId()).getRef()"
      },
      {
        "description": "$ref",
        "javascript": "new DBRef('coll', new ObjectId()).namespace",
        "python": "DBRef('coll', ObjectId()).collection",
        "java": "new DBRef(\"coll\", new ObjectId()).getCollectionName()",
        "csharp": "",
        "shell": "new DBRef('coll', new ObjectId()).$ref"
      },
      {
        "description": "getId",
        "javascript": "new DBRef('coll', new ObjectId()).oid",
        "python": "DBRef('coll', ObjectId()).id",
        "java": "new DBRef(\"coll\", new ObjectId()).getId()",
        "csharp": "",
        "shell": "new DBRef('coll', new ObjectId()).getId()"
      },
      {
        "description": "$id",
        "javascript": "new DBRef('coll', new ObjectId()).oid",
        "python": "DBRef('coll', ObjectId()).id",
        "java": "new DBRef(\"coll\", new ObjectId()).getId()",
        "csharp": "",
        "shell": "new DBRef('coll', new ObjectId()).$id"
      }
    ],
    "NumberInt": [
      {
        "description": "toString",
        "javascript": "Int32(3).toString()",
        "python": "str(int(3))",
        "java": "new java.lang.Integer(3).toString()",
        "csharp": "",
        "shell": "NumberInt(3).toString()"
      },
      {
        "description": "valueOf",
        "javascript": "Int32(3).valueOf()",
        "python": "int(3)",
        "java": "new java.lang.Integer(3).intValue()",
        "csharp": "",
        "shell": "NumberInt(3).valueOf()"
      }
    ],
    "NumberLong": [
      {
        "description": "toString",
        "javascript": "'429496729601'",
        "python": "'429496729601'",
        "java": "\"429496729601\"",
        "csharp": "",
        "shell": "NumberLong(429496729601).toString()"
      },
      {
        "description": "valueOf",
        "javascript": "Long.fromNumber(429496729601).toInt()",
        "python": "long(Int64(429496729601))",
        "java": "new java.lang.Long(\"429496729601\").intValue()",
        "csharp": "",
        "shell": "NumberLong(429496729601).valueOf()"
      },
      {
        "description": "floatApprox",
        "javascript": "Long.fromNumber(429496729601).toNumber()",
        "python": "float(Int64(429496729601))",
        "java": "new java.lang.Long(\"429496729601\").floatValue()",
        "csharp": "",
        "shell": "NumberLong(429496729601).floatApprox"
      },
      {
        "description": "top",
        "javascript": "Long.fromNumber(429496729601).getHighBits()",
        "python": "Int64(429496729601) >> 32",
        "java": "new java.lang.Long(\"429496729601\") >> 32",
        "csharp": "",
        "shell": "NumberLong(429496729601).top"
      },
      {
        "description": "bottom",
        "javascript": "Long.fromNumber(429496729601).getLowBits()",
        "python": "Int64(429496729601) & 0x0000ffff",
        "java": "new java.lang.Long(\"429496729601\") & 0x0000ffff",
        "csharp": "",
        "shell": "NumberLong(429496729601).bottom"
      }
    ],
    "NumberDecimal": [
      {
        "description": "toString",
        "javascript": "Decimal128.fromString('0').toString()",
        "python": "str(Decimal128('0'))",
        "java": "Decimal128.parse(\"0\").toString()",
        "csharp": "",
        "shell": "NumberDecimal(0).toString()"
      }
    ],
    "Timestamp": [
      {
        "description": "toString",
        "javascript": "Timestamp(1, 100).toString()",
        "python": "str(Timestamp(1, 100))",
        "java": "new BSONTimestamp(1, 100).toString()",
        "csharp": "",
        "shell": "Timestamp(1, 100).toString()"
      },
      {
        "description": "getTime",
        "javascript": "Timestamp(1, 100).getLowBits()",
        "python": "Timestamp(1, 100).time",
        "java": "new BSONTimestamp(1, 100).getTime()",
        "csharp": "",
        "shell": "Timestamp(1, 100).getTime()"
      },
      {
        "description": "getInc",
        "javascript": "Timestamp(1, 100).getHighBits()",
        "python": "Timestamp(1, 100).inc",
        "java": "new BSONTimestamp(1, 100).getInc()",
        "csharp": "",
        "shell": "Timestamp(1, 100).getInc()"
      },
      {
        "description": "t",
        "javascript": "Timestamp(1, 100).getLowBits()",
        "python": "Timestamp(1, 100).time",
        "java": "new BSONTimestamp(1, 100).getTime()",
        "csharp": "",
        "shell": "Timestamp(1, 100).t"
      },
      {
        "description": "i",
        "javascript": "Timestamp(1, 100).getHighBits()",
        "python": "Timestamp(1, 100).inc",
        "java": "new BSONTimestamp(1, 100).getInc()",
        "csharp": "",
        "shell": "Timestamp(1, 100).i"
      }
    ]
  }
}
