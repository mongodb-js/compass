{
  "languages": [
    "python",
    "java",
    "csharp"
  ],
  "types": {
    "Number": [
      {
        "description": "Number with number arg",
        "query": "new Number(2)",
        "python": "int(2)",
        "java": "new java.lang.Integer(2)",
        "csharp": ""
      }
    ],
    "NumberLiterals": [
      {
        "description": "Literal 2",
        "query": "2",
        "python": "2",
        "java": "2",
        "csharp": ""
      }
    ],
    "Date": [
      {
        "description": "new Date with ISO String",
        "query": "new Date('December 17, 1995 03:24:00Z')",
        "python": "datetime.datetime(1995, 12, 17, 3, 24, 0, tzinfo=datetime.timezone.utc)",
        "java": "new java.util.Date(819170640000)",
        "csharp": ""
      },
      {
        "description": "new Date with UTC number",
        "query": "new Date(819167040000)",
        "python": "datetime.datetime(1995, 12, 17, 2, 24, 0, tzinfo=datetime.timezone.utc)",
        "java": "new java.util.Date(819167040000)",
        "csharp": ""
      },
      {
        "description": "Current date",
        "query": "new Date()",
        "python": "datetime.datetime.utcnow().date()",
        "java": "new Date()",
        "csharp": ""
      },
      {
        "description": "Date from year, month and day",
        "query": "new Date(1995, 11, 17)",
        "python": "datetime.datetime(1995, 12, 17, 0, 0, 0, tzinfo=datetime.timezone.utc)",
        "java": "new java.util.Date(819158400000)",
        "csharp": ""
      },
      {
        "description": "Date from year, month, day, hour, min and sec",
        "query": "new Date(1995, 11, 17, 3, 24, 0)",
        "python": "datetime.datetime(1995, 12, 17, 3, 24, 0, tzinfo=datetime.timezone.utc)",
        "java": "new java.util.Date(819170640000)",
        "csharp": ""
      }
    ],
    "DateObject": [
      {
        "description": "Current time",
        "query": "Date.now()",
        "python": "datetime.datetime.utcnow()",
        "java": "",
        "csharp": ""
      }
    ],
    "RegExp": [
      {
        "description": "new RegExp with string arg",
        "query": "new RegExp('/^[a-z0-9_-]{3,16}$/')",
        "python": "RegExp('/^[a-z0-9_-]{3,16}$/')",
        "java": "Pattern.compile(\"/^[a-z0-9_-]{3,16}$/\")",
        "csharp": ""
      }
    ],
    "Object": [
      {
        "description": "Object.create()",
        "query": "Object.create({x: 1})",
        "python": "{'x': 1}",
        "java": "new Document().append(\"x\", 1)",
        "csharp": ""
      }
    ]
  }
}
