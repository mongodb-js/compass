module.exports="SymbolTypes:\n    VAR: &var 0\n    CONSTRUCTOR: &constructor 1\n    FUNC: &func 2\n# Internal patterns to save typing\n__type: &__type\n    id: null\n    callable: *var\n    args: null\n    type: null\n    attr: {}\n    template: null\n    argsTemplate: null\n__func: &__func\n    callable: *func\n    args: []\n    attr: {}\n    template: null\n    argsTemplate: null\n\n# Javascript Templates\nTemplates:\n    # BSON Object Type templates\n    CodeTypeTemplate: &CodeTypeTemplate null\n    StringTypeTemplate: &StringTypeTemplate null\n    RegexTypeTemplate: &RegexTypeTemplate null\n    BoolTypeTemplate: &BoolTypeTemplate null\n    IntegerTypeTemplate: &IntegerTypeTemplate null\n    DecimalTypeTemplate: &DecimalTypeTemplate null\n    LongBasicTypeTemplate: &LongBasicTypeTemplate null\n    HexTypeTemplate: &HexTypeTemplate null\n    OctalTypeTemplate: &OctalTypeTemplate null\n    NumericTypeTemplate: &NumericTypeTemplate null\n    ArrayTypeTemplate: &ArrayTypeTemplate !!js/function >\n        (literal) => {\n            return `[${literal}]`;\n        }\n    NullTypeTemplate: &NullTypeTemplate !!js/function >\n        () => {\n            return 'null';\n        }\n    UndefinedTypeTemplate: &UndefinedTypeTemplate !!js/function >\n        () => {\n            return 'undefined';\n        }\n    ObjectTypeTemplate: &ObjectTypeTemplate !!js/function >\n        (literal) => {\n            return `{${literal}}`;\n        }\n    ObjectTypeArgsTemplate: &ObjectTypeArgsTemplate !!js/function >\n        (args) => {\n            return args.map((arg) => {\n                return `${arg[0]}: ${arg[1]}`;\n            }).join(', ');\n        }\n    # BSON Object Method templates\n    CodeCodeTemplate: &CodeCodeTemplate null\n    CodeCodeArgsTemplate: &CodeCodeArgsTemplate null\n    CodeScopeTemplate: &CodeScopeTemplate null\n    CodeScopeArgsTemplate: &CodeScopeArgsTemplate null\n    CodeToStringTemplate: &CodeToStringTemplate null\n    CodeToStringArgsTemplate: &CodeToStringArgsTemplate null\n    ObjectIdToStringTemplate: &ObjectIdToStringTemplate null\n    ObjectIdToStringArgsTemplate: &ObjectIdToStringArgsTemplate null\n    ObjectIdEqualsTemplate: &ObjectIdEqualsTemplate null\n    ObjectIdEqualsArgsTemplate: &ObjectIdEqualsArgsTemplate null\n    ObjectIdGetTimestampTemplate: &ObjectIdGetTimestampTemplate null\n    ObjectIdGetTimestampArgsTemplate: &ObjectIdGetTimestampArgsTemplate null\n    BinaryValueTemplate: &BinaryValueTemplate null\n    BinaryValueArgsTemplate: &BinaryValueArgsTemplate null\n    BinaryLengthTemplate: &BinaryLengthTemplate null\n    BinaryLengthArgsTemplate: &BinaryLengthArgsTemplate null\n    BinaryToStringTemplate: &BinaryToStringTemplate null\n    BinaryToStringArgsTemplate: &BinaryToStringArgsTemplate null\n    BinarySubtypeTemplate: &BinarySubtypeTemplate null\n    BinarySubtypeArgsTemplate: &BinarySubtypeArgsTemplate null\n    DBRefGetDBTemplate: &DBRefGetDBTemplate null\n    DBRefGetCollectionTemplate: &DBRefGetCollectionTemplate null\n    DBRefGetIdTemplate: &DBRefGetIdTemplate null\n    DBRefGetDBArgsTemplate: &DBRefGetDBArgsTemplate null\n    DBRefGetCollectionArgsTemplate: &DBRefGetCollectionArgsTemplate null\n    DBRefGetIdArgsTemplate: &DBRefGetIdArgsTemplate null\n    DBRefToStringTemplate: &DBRefToStringTemplate null\n    DBRefToStringArgsTemplate: &DBRefToStringArgsTemplate null\n    DoubleValueOfTemplate: &DoubleValueOfTemplate null\n    DoubleValueOfArgsTemplate: &DoubleValueOfArgsTemplate null\n    Int32ValueOfTemplate: &Int32ValueOfTemplate null\n    Int32ValueOfArgsTemplate: &Int32ValueOfArgsTemplate null\n    LongEqualsTemplate: &LongEqualsTemplate null\n    LongEqualsArgsTemplate: &LongEqualsArgsTemplate null\n    LongToIntTemplate: &LongToIntTemplate null\n    LongToIntArgsTemplate: &LongToIntArgsTemplate null\n    LongToNumberTemplate: &LongToNumberTemplate null\n    LongToNumberArgsTemplate: &LongToNumberArgsTemplate null\n    LongAddTemplate: &LongAddTemplate null\n    LongAddArgsTemplate: &LongAddArgsTemplate null\n    LongSubtractTemplate: &LongSubtractTemplate null\n    LongSubtractArgsTemplate: &LongSubtractArgsTemplate null\n    LongMultiplyTemplate: &LongMultiplyTemplate null\n    LongMultiplyArgsTemplate: &LongMultiplyArgsTemplate null\n    LongDivTemplate: &LongDivTemplate null\n    LongDivArgsTemplate: &LongDivArgsTemplate null\n    LongModuloTemplate: &LongModuloTemplate null\n    LongModuloArgsTemplate: &LongModuloArgsTemplate null\n    LongAndTemplate: &LongAndTemplate null\n    LongAndArgsTemplate: &LongAndArgsTemplate null\n    LongOrTemplate: &LongOrTemplate null\n    LongOrArgsTemplate: &LongOrArgsTemplate null\n    LongXorTemplate: &LongXorTemplate null\n    LongXorArgsTemplate: &LongXorArgsTemplate null\n    LongShiftLeftTemplate: &LongShiftLeftTemplate null\n    LongShiftLeftArgsTemplate: &LongShiftLeftArgsTemplate null\n    LongShiftRightTemplate: &LongShiftRightTemplate null\n    LongShiftRightArgsTemplate: &LongShiftRightArgsTemplate null\n    LongCompareTemplate: &LongCompareTemplate null\n    LongCompareArgsTemplate: &LongCompareArgsTemplate null\n    LongIsOddTemplate: &LongIsOddTemplate null\n    LongIsOddArgsTemplate: &LongIsOddArgsTemplate null\n    LongIsZeroTemplate: &LongIsZeroTemplate null\n    LongIsZeroArgsTemplate: &LongIsZeroArgsTemplate null\n    LongIsNegativeTemplate: &LongIsNegativeTemplate null\n    LongIsNegativeArgsTemplate: &LongIsNegativeArgsTemplate null\n    LongNegateTemplate: &LongNegateTemplate null\n    LongNegateArgsTemplate: &LongNegateArgsTemplate null\n    LongNotTemplate: &LongNotTemplate null\n    LongNotArgsTemplate: &LongNotArgsTemplate null\n    LongNotEqualsTemplate: &LongNotEqualsTemplate null\n    LongNotEqualsArgsTemplate: &LongNotEqualsArgsTemplate null\n    LongGreaterThanTemplate: &LongGreaterThanTemplate null\n    LongGreaterThanArgsTemplate: &LongGreaterThanArgsTemplate null\n    LongGreaterThanOrEqualTemplate: &LongGreaterThanOrEqualTemplate null\n    LongGreaterThanOrEqualArgsTemplate: &LongGreaterThanOrEqualArgsTemplate null\n    LongLessThanTemplate: &LongLessThanTemplate null\n    LongLessThanArgsTemplate: &LongLessThanArgsTemplate null\n    LongLessThanOrEqualTemplate: &LongLessThanOrEqualTemplate null\n    LongLessThanOrEqualArgsTemplate: &LongLessThanOrEqualArgsTemplate null\n    LongFloatApproxTemplate: &LongFloatApproxTemplate null\n    LongTopTemplate: &LongTopTemplate null\n    LongBottomTemplate: &LongBottomTemplate null\n    TimestampToStringTemplate: &TimestampToStringTemplate null\n    TimestampToStringArgsTemplate: &TimestampToStringArgsTemplate null\n    TimestampEqualsTemplate: &TimestampEqualsTemplate null\n    TimestampEqualsArgsTemplate: &TimestampEqualsArgsTemplate null\n    TimestampGetLowBitsTemplate: &TimestampGetLowBitsTemplate null\n    TimestampGetLowBitsArgsTemplate: &TimestampGetLowBitsArgsTemplate null\n    TimestampGetHighBitsTemplate: &TimestampGetHighBitsTemplate null\n    TimestampGetHighBitsArgsTemplate: &TimestampGetHighBitsArgsTemplate null\n    TimestampTTemplate: &TimestampTTemplate null\n    TimestampITemplate: &TimestampITemplate null\n    TimestampCompareTemplate: &TimestampCompareTemplate null\n    TimestampCompareArgsTemplate: &TimestampCompareArgsTemplate null\n    TimestampNotEqualsTemplate: &TimestampNotEqualsTemplate null\n    TimestampNotEqualsArgsTemplate: &TimestampNotEqualsArgsTemplate null\n    TimestampGreaterThanTemplate: &TimestampGreaterThanTemplate null\n    TimestampGreaterThanArgsTemplate: &TimestampGreaterThanArgsTemplate null\n    TimestampGreaterThanOrEqualTemplate: &TimestampGreaterThanOrEqualTemplate null\n    TimestampGreaterThanOrEqualArgsTemplate: &TimestampGreaterThanOrEqualArgsTemplate null\n    TimestampLessThanTemplate: &TimestampLessThanTemplate null\n    TimestampLessThanArgsTemplate: &TimestampLessThanArgsTemplate null\n    TimestampLessThanOrEqualTemplate: &TimestampLessThanOrEqualTemplate null\n    TimestampLessThanOrEqualArgsTemplate: &TimestampLessThanOrEqualArgsTemplate null\n    SymbolValueOfTemplate: &SymbolValueOfTemplate null\n    SymbolValueOfArgsTemplate: &SymbolValueOfArgsTemplate null\n    SymbolInspectTemplate: &SymbolInspectTemplate null\n    SymbolInspectArgsTemplate: &SymbolInspectArgsTemplate null\n    SymbolToStringTemplate: &SymbolToStringTemplate null\n    SymbolToStringArgsTemplate: &SymbolToStringArgsTemplate null\n    # Symbol Templates\n    CodeSymbolTemplate: &CodeSymbolTemplate null\n    CodeSymbolArgsTemplate: &CodeSymbolArgsTemplate !!js/function >\n        (lhs, code, scope) => {\n            code = code === undefined ? '\\'\\'' : code;\n            scope = scope === undefined ? '' : `, ${scope}`;\n            return `(${code}${scope})`;\n        }\n    ObjectIdSymbolTemplate: &ObjectIdSymbolTemplate null\n    ObjectIdSymbolArgsTemplate: &ObjectIdSymbolArgsTemplate !!js/function >\n        (lhs, arg) => {\n            arg = arg === undefined ? '' : arg;\n            return `(${arg})`;\n        }\n    BinarySymbolTemplate: &BinarySymbolTemplate !!js/function >\n        () => {\n            return 'Binary';\n        }\n    BinarySymbolArgsTemplate: &BinarySymbolArgsTemplate !!js/function >\n        (lhs, subtype, buffer) => {\n            return `(${buffer.toString('base64')}, '${subtype.toString(16)}')`;\n        }\n    BinarySymbolSubtypeDefaultTemplate: &BinarySymbolSubtypeDefaultTemplate null\n    BinarySymbolSubtypeFunctionTemplate: &BinarySymbolSubtypeFunctionTemplate null\n    BinarySymbolSubtypeByteArrayTemplate: &BinarySymbolSubtypeByteArrayTemplate null\n    BinarySymbolSubtypeUuidOldTemplate: &BinarySymbolSubtypeUuidOldTemplate null\n    BinarySymbolSubtypeUuidTemplate: &BinarySymbolSubtypeUuidTemplate null\n    BinarySymbolSubtypeMd5Template: &BinarySymbolSubtypeMd5Template null\n    BinarySymbolSubtypeUserDefinedTemplate: &BinarySymbolSubtypeUserDefinedTemplate null\n    DBRefSymbolTemplate: &DBRefSymbolTemplate null\n    DBRefSymbolArgsTemplate: &DBRefSymbolArgsTemplate null\n    DoubleSymbolTemplate: &DoubleSymbolTemplate null\n    DoubleSymbolArgsTemplate: &DoubleSymbolArgsTemplate null\n    Int32SymbolTemplate: &Int32SymbolTemplate !!js/function >\n        () => {\n            return 'Int32';\n        }\n    Int32SymbolArgsTemplate: &Int32SymbolArgsTemplate !!js/function >\n        (lhs, arg) => {\n            arg = arg === undefined ? 0 : arg;\n            return `(${arg})`;\n        }\n    LongSymbolTemplate: &LongSymbolTemplate !!js/function >\n        () => {\n            return 'Long.fromNumber';\n        }\n    LongSymbolArgsTemplate: &LongSymbolArgsTemplate !!js/function >\n        (lhs, arg) => {\n            arg = arg === undefined ? 0 : arg;\n            return `(${arg})`;\n        }\n    LongSymbolMaxTemplate: &LongSymbolMaxTemplate null\n    LongSymbolMaxArgsTemplate: &LongSymbolMaxArgsTemplate null\n    LongSymbolMinTemplate: &LongSymbolMinTemplate null\n    LongSymbolMinArgsTemplate: &LongSymbolMinArgsTemplate null\n    LongSymbolZeroTemplate: &LongSymbolZeroTemplate null\n    LongSymbolZeroArgsTemplate: &LongSymbolZeroArgsTemplate null\n    LongSymbolOneTemplate: &LongSymbolOneTemplate null\n    LongSymbolOneArgsTemplate: &LongSymbolOneArgsTemplate null\n    LongSymbolNegOneTemplate: &LongSymbolNegOneTemplate null\n    LongSymbolNegOneArgsTemplate: &LongSymbolNegOneArgsTemplate null\n    LongSymbolFromBitsTemplate: &LongSymbolFromBitsTemplate null\n    LongSymbolFromBitsArgsTemplate: &LongSymbolFromBitsArgsTemplate null\n    LongSymbolFromIntTemplate: &LongSymbolFromIntTemplate null\n    LongSymbolFromIntArgsTemplate: &LongSymbolFromIntArgsTemplate null\n    LongSymbolFromNumberTemplate: &LongSymbolFromNumberTemplate null\n    LongSymbolFromNumberArgsTemplate: &LongSymbolFromNumberArgsTemplate null\n    LongSymbolFromStringTemplate: &LongSymbolFromStringTemplate null\n    LongSymbolFromStringArgsTemplate: &LongSymbolFromStringArgsTemplate null\n    MinKeySymbolTemplate: &MinKeySymbolTemplate null\n    MinKeySymbolArgsTemplate: &MinKeySymbolArgsTemplate null\n    MaxKeySymbolTemplate: &MaxKeySymbolTemplate null\n    MaxKeySymbolArgsTemplate: &MaxKeySymbolArgsTemplate null\n    TimestampSymbolTemplate: &TimestampSymbolTemplate null\n    TimestampSymbolArgsTemplate: &TimestampSymbolArgsTemplate !!js/function >\n        (lhs, arg1, arg2) => {\n            return `(${arg1 === undefined ? 0 : arg1}, ${arg2 === undefined ? 0 : arg2})`;\n        }\n    SymbolSymbolTemplate: &SymbolSymbolTemplate null\n    SymbolSymbolArgsTemplate: &SymbolSymbolArgsTemplate null\n    BSONRegExpSymbolTemplate: &BSONRegExpSymbolTemplate null # Has emit method\n    BSONRegExpSymbolArgsTemplate: &BSONRegExpSymbolArgsTemplate null\n    Decimal128SymbolTemplate: &Decimal128SymbolTemplate !!js/function >\n        () => {\n            return 'Decimal128.fromString';\n        }\n    Decimal128SymbolArgsTemplate: &Decimal128SymbolArgsTemplate !!js/function >\n        (lhs, arg) => {\n            arg = arg === undefined ? '0' : arg.toString();\n            if (arg.charAt(0) === '\\'' && arg.charAt(arg.length - 1) === '\\'') {\n                return `(${arg})`;\n            }\n            return `('${arg}')`;\n        }\n    Decimal128SymbolFromStringTemplate: &Decimal128SymbolFromStringTemplate null\n    Decimal128SymbolFromStringArgsTemplate: &Decimal128SymbolFromStringArgsTemplate null\n    Decimal128ToStringTemplate: &Decimal128ToStringTemplate null\n    Decimal128ToStringArgsTemplate: &Decimal128ToStringArgsTemplate null\n    # BSON Util Templates\n    ObjectIdCreateFromHexStringTemplate: &ObjectIdCreateFromHexStringTemplate null\n    ObjectIdCreateFromHexStringArgsTemplate: &ObjectIdCreateFromHexStringArgsTemplate null\n    ObjectIdCreateFromTimeTemplate: &ObjectIdCreateFromTimeTemplate !!js/function >\n        (lhs) => {\n            return `${lhs}.createFromTime`;\n        }\n    ObjectIdCreateFromTimeArgsTemplate: &ObjectIdCreateFromTimeArgsTemplate null\n    ObjectIdIsValidTemplate: &ObjectIdIsValidTemplate null\n    ObjectIdIsValidArgsTemplate: &ObjectIdIsValidArgsTemplate null\n    # JS Symbol Templates\n    ObjectSymbolTemplate: &ObjectSymbolTemplate null\n    ObjectSymbolArgsTemplate: &ObjectSymbolArgsTemplate null\n    ObjectSymbolCreateTemplate: &ObjectSymbolCreateTemplate null\n    ObjectSymbolCreateArgsTemplate: &ObjectSymbolCreateArgsTemplate null\n    NumberSymbolTemplate: &NumberSymbolTemplate null\n    NumberSymbolArgsTemplate: &NumberSymbolArgsTemplate !!js/function >\n        (lhs, arg) => {\n            arg = arg === undefined ? '0' : arg;\n            return `(${arg})`;\n        }\n    DateSymbolTemplate: &DateSymbolTemplate null\n    DateSymbolArgsTemplate: &DateSymbolArgsTemplate null\n    DateSymbolNowTemplate: &DateSymbolNowTemplate null\n    DateSymbolNowArgsTemplate: &DateSymbolNowArgsTemplate null\n    RegExpSymbolTemplate: &RegExpSymbolTemplate null\n    RegExpSymbolArgsTemplate: &RegExpSymbolArgsTemplate null\n# Universal types\n# Everything inherits from StringType because we haven't implemented any of them.\nBasicTypes:\n    # Universal basic types\n    _string: &StringType\n        <<: *__type\n        id: \"_string\"\n        template: *StringTypeTemplate\n    _regex: &RegexType\n        <<: *__type\n        id: \"_regex\"\n        template: *RegexTypeTemplate\n    _bool: &BoolType\n        <<: *__type\n        id: \"_bool\"\n        template: *BoolTypeTemplate\n    _integer: &IntegerType\n        <<: *__type\n        id: \"_integer\"\n        template: *IntegerTypeTemplate\n    _long: &LongBasicType\n        <<: *__type\n        id: \"_long\"\n        template: *LongBasicTypeTemplate\n    _decimal: &DecimalType\n        <<: *__type\n        id: \"_decimal\"\n        template: *DecimalTypeTemplate\n    _hex: &HexType\n        <<: *__type\n        id: \"_hex\"\n        template: *HexTypeTemplate\n    _octal: &OctalType\n        <<: *__type\n        id: \"_octal\"\n        template: *OctalTypeTemplate\n    _numeric: &NumericType\n        <<: *__type\n        id: \"_numeric\"\n        template: *NumericTypeTemplate\n    _array: &ArrayType\n        <<: *__type\n        id: \"_array\"\n        template: *ArrayTypeTemplate\n    _object: &ObjectType\n        <<: *__type\n        id: \"_object\"\n        template: *ObjectTypeTemplate\n        argsTemplate: *ObjectTypeArgsTemplate\n    _null: &NullType\n        <<: *__type\n        id: \"_null\"\n        template: *NullTypeTemplate\n    _undefined: &UndefinedType\n        <<: *__type\n        id: \"_undefined\"\n        template: *UndefinedTypeTemplate\n\nBsonTypes:\n    Code: &CodeType\n        <<: *__type\n        id: \"Code\"\n        type: *ObjectType\n        attr:\n            toString:\n                <<: *__func\n                id: \"toString\"\n                type: *StringType\n            code:\n                callable: *var\n                args: null\n                attr: null\n                id: \"code\"\n                type: *StringType\n                template: *CodeCodeTemplate\n                argsTemplate: *CodeCodeArgsTemplate\n            scope:\n                callable: *var\n                args: null\n                attr: null\n                id: \"scope\"\n                type: *StringType\n                template: *CodeScopeTemplate\n                argsTemplate: *CodeScopeArgsTemplate\n        template: *CodeTypeTemplate\n    ObjectId: &ObjectIdType\n        <<: *__type\n        id: \"ObjectId\"\n        type: *ObjectType\n        attr:\n            toString:\n                <<: *__func\n                id: \"toString\"\n                type: *StringType\n            equals:\n                <<: *__func\n                id: \"equals\"\n                args:\n                    - [ \"ObjectId\" ]\n                type: *BoolType\n                template: *ObjectIdEqualsTemplate\n                argsTemplate: *ObjectIdEqualsArgsTemplate\n            getTimestamp:\n                <<: *__func\n                id: \"getTimestamp\"\n                type: *IntegerType\n                template: *ObjectIdGetTimestampTemplate\n                argsTemplate: *ObjectIdGetTimestampArgsTemplate\n    BinData: &BinaryType\n        <<: *__type\n        id: \"BinData\"\n        type: *ObjectType\n        attr:\n            toString:\n                <<: *__func\n                id: \"toString\"\n                type: *StringType\n                template: *BinaryToStringTemplate\n                argsTemplate: *BinaryToStringArgsTemplate\n            base64:\n                <<: *__func\n                id: \"base64\"\n                type: *StringType\n                template: *BinaryValueTemplate\n                argsTemplate: *BinaryValueArgsTemplate\n            length:\n                <<: *__func\n                id: \"length\"\n                type: *IntegerType\n                template: *BinaryLengthTemplate\n                argsTemplate: *BinaryLengthArgsTemplate\n            subtype:\n                <<: *__func\n                id: \"subtype\"\n                type: *IntegerType\n                template: *BinarySubtypeTemplate\n                argsTemplate: *BinarySubtypeArgsTemplate\n    DBRef: &DBRefType\n        <<: *__type\n        id: \"DBRef\"\n        type: *ObjectType\n        attr:\n            toString:\n                <<: *__func\n                id: \"toString\"\n                type: *StringType\n            getDb:\n                <<: *__func\n                id: \"getDb\"\n                type: *StringType\n                template: *DBRefGetDBTemplate\n                argsTemplate: *DBRefGetDBArgsTemplate\n            $db:\n                callable: *var\n                args: null\n                attr: null\n                id: \"$db\"\n                type: *StringType\n                template: *DBRefGetDBTemplate\n                argsTemplate: *DBRefGetDBArgsTemplate\n            getCollection:\n                <<: *__func\n                id: \"getCollection\"\n                type: *StringType\n                template: *DBRefGetCollectionTemplate\n                argsTemplate: *DBRefGetCollectionArgsTemplate\n            getRef:\n                <<: *__func\n                id: \"getRef\"\n                type: *StringType\n                template: *DBRefGetCollectionTemplate\n                argsTemplate: *DBRefGetCollectionArgsTemplate\n            $ref:\n                callable: *var\n                args: null\n                attr: null\n                id: \"$ref\"\n                type: *StringType\n                template: *DBRefGetCollectionTemplate\n                argsTemplate: *DBRefGetCollectionArgsTemplate\n            getId:\n                <<: *__func\n                id: \"getId\"\n                type: *StringType\n                template: *DBRefGetIdTemplate\n                argsTemplate: *DBRefGetIdArgsTemplate\n            $id:\n                callable: *var\n                args: null\n                attr: null\n                id: \"$id\"\n                type: *StringType\n                template: *DBRefGetIdTemplate\n                argsTemplate: *DBRefGetIdArgsTemplate\n    NumberInt: &Int32Type\n        <<: *__type\n        id: \"NumberInt\"\n        type: *ObjectType\n        attr:\n            toString:\n                <<: *__func\n                id: \"toString\"\n                type: *StringType\n            valueOf: # TODO: needed?\n                <<: *__func\n                id: \"valueOf\"\n                type: *Int32Type\n                template: *Int32ValueOfTemplate\n                argsTemplate: *Int32ValueOfArgsTemplate\n    NumberLong: &LongType\n        <<: *__type\n        id: \"NumberLong\"\n        type: *ObjectType\n        attr:\n            toString:\n                <<: *__func\n                id: \"LongtoString\" # Needs emit method\n                type: *StringType\n            valueOf:\n                <<: *__func\n                id: \"valueOf\"\n                type: *LongBasicType\n                template: *LongToIntTemplate\n            top:\n                callable: *var\n                args: null\n                attr: null\n                id: \"top\"\n                type: *IntegerType\n                template: *LongTopTemplate\n                argsTemplate: null\n            bottom:\n                callable: *var\n                args: null\n                attr: null\n                id: \"bottom\"\n                type: *IntegerType\n                template: *LongBottomTemplate\n                argsTemplate: null\n            floatApprox:\n                callable: *var\n                args: null\n                attr: null\n                id: \"floatApprox\"\n                type: *IntegerType\n                template: *LongFloatApproxTemplate\n                argsTemplate: null\n    MinKeyType: &MinKeyType\n        <<: *__type\n        id: \"MinKey\"\n        type: *ObjectType\n    MaxKeyType: &MaxKeyType\n        <<: *__type\n        id: \"MaxKey\"\n        type: *ObjectType\n    Timestamp: &TimestampType\n        <<: *__type\n        id: \"TimestampFromShell\"\n        type: *ObjectType\n        attr:\n            toString:\n                <<: *__func\n                id: \"toString\"\n                type: *StringType\n            getTime:\n                <<: *__func\n                id: \"getTime\"\n                type: *IntegerType\n                template: *TimestampGetLowBitsTemplate\n                argsTemplate: *TimestampGetLowBitsArgsTemplate\n            getInc:\n                <<: *__func\n                id: \"getInc\"\n                type: *IntegerType\n                template: *TimestampGetHighBitsTemplate\n                argsTemplate: *TimestampGetHighBitsArgsTemplate\n            t:\n                callable: *var\n                args: null\n                attr: null\n                id: \"getTime\"\n                type: *IntegerType\n                template: *TimestampTTemplate\n                argsTemplate: null\n            i:\n                callable: *var\n                args: null\n                attr: null\n                id: \"getInc\"\n                type: *IntegerType\n                template: *TimestampITemplate\n                argsTemplate: null\n    Symbol: &SymbolType\n        <<: *__type\n        id: \"Symbol\"\n        type: *ObjectType\n    NumberDecimal: &Decimal128Type\n        <<: *__type\n        id: \"NumberDecimal\"\n        type: *ObjectType\n        attr:\n            toString:\n                <<: *__func\n                id: \"toString\"\n                type: *StringType\n                template: *Decimal128ToStringTemplate\n                argsTemplate: *Decimal128ToStringArgsTemplate\nJSTypes:\n    Date: &DateType\n        <<: *__type\n        id: \"Date\"\n        type: *ObjectType\n        attr: {} # TODO: no built-in date methods added yet\n    RegExp: &RegExpType\n        <<: *__type\n        id: \"RegExp\"\n        type: *ObjectType\n        attr: {}\n\n\n\n\nBsonSymbols:\n    Code: &CodeSymbol\n        id: \"Code\"\n        callable: *constructor\n        args:\n            - [ *StringType, null ]\n            - [ *ObjectType, null ]\n        type: *CodeType\n        attr: {}\n        template: *CodeSymbolTemplate\n        argsTemplate: *CodeSymbolArgsTemplate\n    ObjectId: &ObjectIdSymbol\n        id: \"ObjectId\"\n        callable: *constructor\n        args:\n            - [ *StringType, null ]\n        type: *ObjectIdType\n        attr:\n            fromDate:\n                <<: *__func\n                id: \"ObjectIdCreateFromTime\"\n                args:\n                    - [ *DateType ]\n                type: *ObjectIdType\n                template: *ObjectIdCreateFromTimeTemplate\n                argsTemplate: *ObjectIdCreateFromTimeArgsTemplate\n        template: *ObjectIdSymbolTemplate\n        argsTemplate: *ObjectIdSymbolArgsTemplate\n    BinData: &BinarySymbol\n        id: \"BinData\"\n        callable: *constructor\n        args:\n            - [ *IntegerType ]\n            - [ *StringType ]\n        type: *BinaryType\n        attr: {}\n        template: *BinarySymbolTemplate\n        argsTemplate: *BinarySymbolArgsTemplate\n    DBRef:\n        id: \"DBRef\"\n        callable: *constructor\n        args:\n            - [ *StringType ]\n            - [ *ObjectIdType ]\n            - [ *StringType, null ]\n        type: *DBRefType\n        attr: {}\n        template: *DBRefSymbolTemplate\n        argsTemplate: *DBRefSymbolArgsTemplate\n    NumberInt:\n        id: \"Int32\"\n        callable: *constructor\n        args:\n            - [ *IntegerType, *StringType, null ]\n        type: *Int32Type\n        attr: {}\n        template: *Int32SymbolTemplate\n        argsTemplate: *Int32SymbolArgsTemplate\n    NumberLong:\n        id: \"NumberLong\"\n        callable: *constructor\n        args:\n            - [ *NumericType, *StringType, null ]\n        type: *LongType\n        attr: {}\n        template: *LongSymbolTemplate\n        argsTemplate: *LongSymbolArgsTemplate\n    MinKey:\n        id: \"MinKey\"\n        callable: *constructor\n        args: []\n        type: *MinKeyType\n        attr: {}\n        template: *MinKeySymbolTemplate\n        argsTemplate: *MinKeySymbolArgsTemplate\n    MaxKey:\n        id: \"MaxKey\"\n        callable: *constructor\n        args: []\n        type: *MaxKeyType\n        attr: {}\n        template: *MaxKeySymbolTemplate\n        argsTemplate: *MaxKeySymbolArgsTemplate\n    Timestamp:\n        id: \"Timestamp\"\n        callable: *constructor\n        args:\n            - [ *IntegerType, null ]\n            - [ *IntegerType, null ]\n        type: *TimestampType\n        attr: {}\n        template: *TimestampSymbolTemplate\n        argsTemplate: *TimestampSymbolArgsTemplate\n    Symbol:\n        id: \"Symbol\"\n        callable: *constructor\n        args:\n            - [ *StringType ]\n        type: *SymbolType\n        attr: {}\n        template: *SymbolSymbolTemplate\n        argsTemplate: *SymbolSymbolArgsTemplate\n    NumberDecimal:\n        id: \"NumberDecimal\"\n        callable: *constructor\n        args:\n            - [ *StringType, *NumericType, null ]\n        type: *Decimal128Type\n        attr: {}\n        template: *Decimal128SymbolTemplate\n        argsTemplate: *Decimal128SymbolArgsTemplate\n\nJSSymbols:\n    Object:\n        id: \"Object\"\n        callable: *var\n        args: null\n        type: *ObjectType\n        attr:\n            create:\n                id: \"create\"\n                callable: *func\n                args:\n                    - [ *ObjectType ]\n                type: *ObjectType\n                attr: {}\n                template: *ObjectSymbolCreateTemplate\n                argsTemplate: *ObjectSymbolCreateArgsTemplate\n        template: *ObjectSymbolTemplate\n        argsTemplate: *ObjectSymbolArgsTemplate\n    Number:\n        id: \"Number\"\n        callable: *constructor\n        args:\n            - [ *IntegerType, *StringType, null ]\n        type: *NumericType\n        attr: {} # TODO: no built-in number funcs added yet\n        template: *NumberSymbolTemplate\n        argsTemplate: *NumberSymbolArgsTemplate\n    Date: # Needs emit method\n        id: \"Date\"\n        callable: *constructor\n        args:\n            - [ *StringType, *NumericType, null ]\n            - [ *NumericType, null ]\n            - [ *NumericType, null ]\n            - [ *NumericType, null ]\n            - [ *NumericType, null ]\n            - [ *NumericType, null ]\n            - [ *NumericType, null ]\n        type: *DateType\n        attr: # TODO: add more date funcs?\n            now:\n                id: \"now\"\n                callable: *constructor\n                args: []\n                type: *DateType\n                attr: {}\n                template: *DateSymbolNowTemplate\n                argsTemplate: *DateSymbolNowArgsTemplate\n        template: *DateSymbolTemplate\n        argsTemplate: *DateSymbolArgsTemplate\n    ISODate: # Needs emit method\n        id: \"ISODate\"\n        callable: *constructor\n        args:\n            - [ *StringType, null ]\n        type: *DateType\n        attr:\n            now:\n                id: \"now\"\n                callable: *constructor\n                args: []\n                type: *DateType\n                attr: {}\n                template: *DateSymbolNowTemplate\n                argsTemplate: *DateSymbolNowArgsTemplate\n        template: *DateSymbolTemplate\n        argsTemplate: *DateSymbolArgsTemplate\n    RegExp: # Needs emit method\n        id: \"RegExp\"\n        callable: *constructor\n        args:\n            - [ *StringType, *RegexType ]\n            - [ *StringType, null ]\n        type: *RegExpType\n        attr: {} # TODO: no built-in regex funcs added yet\n        template: *RegExpSymbolTemplate\n        argsTemplate: *RegExpSymbolArgsTemplate\n\n";
