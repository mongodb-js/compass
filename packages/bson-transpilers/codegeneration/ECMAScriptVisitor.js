const ECMAScriptVisitor = require('../lib/ECMAScriptVisitor').ECMAScriptVisitor;

/**
 * This Visitor walks the AST generated by the transformers and produces code.
 */
function Visitor() {
  ECMAScriptVisitor.call(this);
  return this;
}

Visitor.prototype = Object.create(ECMAScriptVisitor.prototype);
Visitor.prototype.constructor = Visitor;

Visitor.prototype.visitExpression = function(ctx) {
  let code = '';
  for (let i = 0; i < ctx.getChildCount(); i++) {
    code += this.visit(ctx.getChild(i));
  }
  return code;
};

// synonyms of nodes
Visitor.prototype.visitAdditiveExpression = Visitor.prototype.visitExpression;
Visitor.prototype.visitAdd = Visitor.prototype.visitExpression;
Visitor.prototype.visitParenthesizedExpression = Visitor.prototype.visitExpression;
Visitor.prototype.visitPrimary = Visitor.prototype.visitExpression;

Visitor.prototype.visitTerminal = function(ctx) {
  return ctx.getText();
};

module.exports = Visitor;
