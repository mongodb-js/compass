Syntax:
    equality:
        template: *EqualitySyntaxTemplate
    in:
        template: *InSyntaxTemplate
    and:
        template: *AndSyntaxTemplate
    or:
        template: *OrSyntaxTemplate
    not:
        template: *NotSyntaxTemplate
    unary:
        template: *UnarySyntaxTemplate
    binary:
        template: *BinarySyntaxTemplate
    parens:
        template: *ParensSyntaxTemplate
    eos:
        template: *EosSyntaxTemplate
    eof:
        template: *EofSyntaxTemplate
    # The new template takes in expr, and an optional skip argument and optional
    # id argument. The skip argument is a boolean that if true then doesn't add
    # new. The code argument is the symbol code being called. The template will check
    # if it is an exception, i.e. a type that is a constructor but may not use new.
    new:
        template: *NewSyntaxTemplate
    # The regex flags that change symbols between languages can be defined here.
    # Flags that aren't defined can be left blank and will be ignored.
    regexFlags: *RegexFlags
    bsonRegexFlags: *BSONRegexFlags
    driver: *DriverTemplate
