name: Connectivity tests

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  run_connectivity_tests:
    name: Run connectivity tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2
        with:
          node-version: ^12.9.0
          cache: 'npm'

      - name: Install Deps Ubuntu
        run: |
          sudo apt-get -y install \
            krb5-user \
            libsasl2-modules-gssapi-mit \
            ldap-utils \
            libkrb5-dev \
            libsecret-1-dev \
            net-tools \
            libstdc++6 \
            gnome-keyring

      - name: Start docker environments
        run: |
          git clone https://github.com/mongodb-js/devtools-docker-test-envs.git
          cd devtools-docker-test-envs
          git checkout v1.2.0
          docker-compose -f docker/enterprise/docker-compose.yaml up -d
          docker-compose -f docker/ldap/docker-compose.yaml up -d
          docker-compose -f docker/scram/docker-compose.yaml up -d
          docker-compose -f docker/sharded/docker-compose.yaml up -d
          docker-compose -f docker/ssh/docker-compose.yaml up -d
          docker-compose -f docker/tls/docker-compose.yaml up -d
          docker-compose -f docker/kerberos/docker-compose.yaml up -d

      - name: Setup krb5.conf
        run: |
          sudo -i
          echo '[libdefaults]
            default_realm = EXAMPLE.COM
            dns_canonicalize_hostname = false

          [realms]
            EXAMPLE.COM = {
                    kdc = localhost
                    admin_server = localhost
            }
          ' > /etc/krb5.conf

          cat /etc/krb5.conf
        shell: bash


      - name: Setup hostfiles
        run: |
          sudo -i
          echo '127.0.0.1 mongodb-kerberos-1.example.com' >> /etc/hosts
          echo '127.0.0.1 mongodb-kerberos-2.example.com' >> /etc/hosts
          echo '127.0.0.1 mongodb-kerberos-3.examplecrossrealm.com' >> /etc/hosts
          cat /etc/hosts
        shell: bash

      - name: Install npm@7
        run: npm install -g npm@7

      - name: Install Dependencies
        run: npm run bootstrap-ci

      - name: Docker ps
        run: docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

      - name: Kinit
        run: |
          echo 'password' | kinit mongodb.user@EXAMPLE.COM
          klist
        shell: bash

      - name: Run connectivity tests
        env:
          E2E_TESTS_ATLAS_HOST: ${{ secrets.E2E_TESTS_ATLAS_HOST }}
          E2E_TESTS_DATA_LAKE_HOST: ${{ secrets.E2E_TESTS_DATA_LAKE_HOST }}
          E2E_TESTS_SERVERLESS_HOST: ${{ secrets.E2E_TESTS_SERVERLESS_HOST }}
          E2E_TESTS_ATLAS_USERNAME: ${{ secrets.E2E_TESTS_ATLAS_USERNAME }}
          E2E_TESTS_ATLAS_PASSWORD: ${{ secrets.E2E_TESTS_ATLAS_PASSWORD }}
          # Matches what we are doing in Evergreen
          MONGODB_VERSION: '4'
        run: COMPASS_RUN_DOCKER_TESTS=true npm run test --workspace mongodb-data-service
        shell: bash
